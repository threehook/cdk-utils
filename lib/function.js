"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Function = void 0;
const cdk = require("@aws-cdk/core");
const lambda = require("@aws-cdk/aws-lambda");
const logs = require("@aws-cdk/aws-logs");
const aws_logs_destinations_1 = require("@aws-cdk/aws-logs-destinations");
class Function extends cdk.Construct {
    constructor(scope, id, props) {
        super(scope, id);
        this.code = lambda.Code.fromCfnParameters();
        this.function = new lambda.Function(this, id, ensureDefaults(props, this.code));
        this.path = props.path;
        new logs.LogGroup(this, 'LogGroup', {
            logGroupName: Function.logGroupName(this.function),
            retention: logs.RetentionDays.TWO_MONTHS,
        }).addSubscriptionFilter('SubscriptionFilter', {
            destination: new aws_logs_destinations_1.LambdaDestination(props.errorsNotifierFunction.function),
            filterPattern: logs.FilterPattern.anyTerm('level=error', 'Task timed out', 'panic:'),
        });
        cdk.Tags.of(this).add('dpg:lambda:path', props.path);
    }
    static logGroupName(fn) {
        return `/aws/lambda/${fn.functionName}`;
    }
    on(api, httpPath, httpMethod) {
        api.withFunctionOn(httpPath, httpMethod, this.function);
    }
}
exports.Function = Function;
const ensureDefaults = (props, code) => {
    return Object.assign({ code }, defaults, props);
};
const defaults = {
    runtime: lambda.Runtime.GO_1_X,
    handler: 'main',
    tracing: lambda.Tracing.ACTIVE,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJmdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxxQ0FBcUM7QUFDckMsOENBQThDO0FBQzlDLDBDQUEwQztBQUMxQywwRUFBbUU7QUFXbkUsTUFBYSxRQUFTLFNBQVEsR0FBRyxDQUFDLFNBQVM7SUFRdkMsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUFvQjtRQUM5RCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBSlosU0FBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQU01QyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLGNBQWMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBRXZCLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsVUFBVSxFQUFFO1lBQ2hDLFlBQVksRUFBRSxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDbEQsU0FBUyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVTtTQUMzQyxDQUFDLENBQUMscUJBQXFCLENBQUMsb0JBQW9CLEVBQUU7WUFDM0MsV0FBVyxFQUFFLElBQUkseUNBQWlCLENBQUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDLFFBQVEsQ0FBQztZQUN6RSxhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLGdCQUFnQixFQUFFLFFBQVEsQ0FBQztTQUN2RixDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUF0QkQsTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUFvQjtRQUNwQyxPQUFPLGVBQWUsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVDLENBQUM7SUFzQkQsRUFBRSxDQUFDLEdBQWUsRUFBRSxRQUFnQixFQUFFLFVBQWtCO1FBQ3BELEdBQUcsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUQsQ0FBQztDQUNKO0FBNUJELDRCQTRCQztBQUVELE1BQU0sY0FBYyxHQUFHLENBQUMsS0FBb0IsRUFBRSxJQUE4QixFQUF3QixFQUFFO0lBQ2xHLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNwRCxDQUFDLENBQUM7QUFFRixNQUFNLFFBQVEsR0FBRztJQUNiLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU07SUFDOUIsT0FBTyxFQUFFLE1BQU07SUFDZixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNO0NBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgKiBhcyBsYW1iZGEgZnJvbSAnQGF3cy1jZGsvYXdzLWxhbWJkYSc7XG5pbXBvcnQgKiBhcyBsb2dzIGZyb20gJ0Bhd3MtY2RrL2F3cy1sb2dzJztcbmltcG9ydCB7IExhbWJkYURlc3RpbmF0aW9uIH0gZnJvbSAnQGF3cy1jZGsvYXdzLWxvZ3MtZGVzdGluYXRpb25zJztcbmltcG9ydCB7IFNlcnZpY2VBcGkgfSBmcm9tICcuL3NlcnZpY2VhcGknO1xuaW1wb3J0IHsgVW5tb25pdG9yZWRGdW5jdGlvbn0gZnJvbSAnLi91bm1vbml0b3JlZF9mdW5jdGlvbic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVuY3Rpb25Qcm9wcyBleHRlbmRzIGxhbWJkYS5GdW5jdGlvbk9wdGlvbnMge1xuICAgIHJlYWRvbmx5IGVycm9yc05vdGlmaWVyRnVuY3Rpb24gOiBVbm1vbml0b3JlZEZ1bmN0aW9uO1xuICAgIHJlYWRvbmx5IHJ1bnRpbWU/OiBsYW1iZGEuUnVudGltZTtcbiAgICByZWFkb25seSBoYW5kbGVyPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHBhdGg6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uIGV4dGVuZHMgY2RrLkNvbnN0cnVjdCB7XG4gICAgc3RhdGljIGxvZ0dyb3VwTmFtZShmbjogbGFtYmRhLklGdW5jdGlvbik6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgL2F3cy9sYW1iZGEvJHtmbi5mdW5jdGlvbk5hbWV9YDtcbiAgICB9XG4gICAgcmVhZG9ubHkgZnVuY3Rpb246IGxhbWJkYS5GdW5jdGlvbjtcbiAgICByZWFkb25seSBjb2RlID0gbGFtYmRhLkNvZGUuZnJvbUNmblBhcmFtZXRlcnMoKTtcbiAgICByZWFkb25seSBwYXRoOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogY2RrLkNvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IEZ1bmN0aW9uUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkKTtcblxuICAgICAgICB0aGlzLmZ1bmN0aW9uID0gbmV3IGxhbWJkYS5GdW5jdGlvbih0aGlzLCBpZCwgZW5zdXJlRGVmYXVsdHMocHJvcHMsIHRoaXMuY29kZSkpO1xuICAgICAgICB0aGlzLnBhdGggPSBwcm9wcy5wYXRoO1xuXG4gICAgICAgIG5ldyBsb2dzLkxvZ0dyb3VwKHRoaXMsICdMb2dHcm91cCcsIHtcbiAgICAgICAgICAgIGxvZ0dyb3VwTmFtZTogRnVuY3Rpb24ubG9nR3JvdXBOYW1lKHRoaXMuZnVuY3Rpb24pLFxuICAgICAgICAgICAgcmV0ZW50aW9uOiBsb2dzLlJldGVudGlvbkRheXMuVFdPX01PTlRIUyxcbiAgICAgICAgfSkuYWRkU3Vic2NyaXB0aW9uRmlsdGVyKCdTdWJzY3JpcHRpb25GaWx0ZXInLCB7XG4gICAgICAgICAgICBkZXN0aW5hdGlvbjogbmV3IExhbWJkYURlc3RpbmF0aW9uKHByb3BzLmVycm9yc05vdGlmaWVyRnVuY3Rpb24uZnVuY3Rpb24pLFxuICAgICAgICAgICAgZmlsdGVyUGF0dGVybjogbG9ncy5GaWx0ZXJQYXR0ZXJuLmFueVRlcm0oJ2xldmVsPWVycm9yJywgJ1Rhc2sgdGltZWQgb3V0JywgJ3BhbmljOicpLFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGNkay5UYWdzLm9mKHRoaXMpLmFkZCgnZHBnOmxhbWJkYTpwYXRoJywgcHJvcHMucGF0aCk7XG4gICAgfVxuXG4gICAgb24oYXBpOiBTZXJ2aWNlQXBpLCBodHRwUGF0aDogc3RyaW5nLCBodHRwTWV0aG9kOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgYXBpLndpdGhGdW5jdGlvbk9uKGh0dHBQYXRoLCBodHRwTWV0aG9kLCB0aGlzLmZ1bmN0aW9uKTtcbiAgICB9XG59XG5cbmNvbnN0IGVuc3VyZURlZmF1bHRzID0gKHByb3BzOiBGdW5jdGlvblByb3BzLCBjb2RlOiBsYW1iZGEuQ2ZuUGFyYW1ldGVyc0NvZGUpOiBsYW1iZGEuRnVuY3Rpb25Qcm9wcyA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oeyBjb2RlIH0sIGRlZmF1bHRzLCBwcm9wcyk7XG59O1xuXG5jb25zdCBkZWZhdWx0cyA9IHtcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5HT18xX1gsXG4gICAgaGFuZGxlcjogJ21haW4nLFxuICAgIHRyYWNpbmc6IGxhbWJkYS5UcmFjaW5nLkFDVElWRSxcbn07XG4iXX0=